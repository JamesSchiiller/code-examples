public void add_queen(int move)
{
	m_bd=constants.get_queen().shiftLeft(move).or(m_bd);
} // ToString() converts board to dec #

public void undo_move(int move)
{
	m_plies-=1;
	m_plies1=m_plies&1;
}

public void clear_board()
{
	m_bd=new BigInteger("0");
}

public String mv_hist()
{
	return m_mv_hist;
}

public void set_move(int move)
{
	m_mv_hist += move;
}

public boolean is_legal(int move_in)
{
	boolean is_legal=false;
	
	switch(move_in)
	{
		case 0:case 1:case 2:case 3:case 4:case 5:case 6:case 7:
		case 22:case 23:case 24:case 25:case 26:case 27:case 28:case 29:
		case 44:case 45:case 46:case 47:case 48:case 49:case 50:case 51:
		case 66:case 67:case 68:case 69:case 70:case 71:case 72:case 73:
		case 88:case 89:case 90:case 91:case 92:case 93:case 94:case 95:
		case 110:case 111:case 112:case 113:case 114:case 115:case 116:case 117:
		case 132:case 133:case 134:case 135:case 136:case 137:case 138:case 139:
		case 154:case 155:case 156:case 157:case 158:case 159:case 160:case 161:
		if(m_bd.and(new BigInteger("1").shiftLeft(move_in+DeduceConstants.BOTTOM_LEFT)).compareTo(new BigInteger("0")) == 0)
		{
			is_legal=true;
		} // If player's move not being attacked in mid board
		default: // Do nothing
	}
  
	return is_legal;
 }
